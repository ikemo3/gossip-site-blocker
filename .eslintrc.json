{
  "env": {
    "browser": true,
    "es6": true,
    "jasmine": true,
    "webextensions": true
  },
  "extends": [
    "airbnb-base",
    "plugin:jasmine/recommended",
    "plugin:@typescript-eslint/recommended"
  ],
  "globals": {
    "Atomics": "readonly",
    "SharedArrayBuffer": "readonly"
  },
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "ecmaVersion": 2018,
    "sourceType": "module"
  },
  "plugins": [
    "@typescript-eslint",
    "jasmine"
  ],
  "rules": {
    "class-methods-use-this": "off",
    "consistent-return": "warn",
    "default-case": "warn",
    "indent": [
      "error",
      4
    ],
    "max-len": "warn",
    "no-case-declarations": "warn",
    "no-continue": "warn",
    "no-param-reassign": "warn",
    "no-restricted-globals": "warn",
    "no-restricted-syntax": [
      "warn",
      {
        "selector": "ForInStatement",
        "message": "for..in loops iterate over the entire prototype chain, which is virtually never what you want. Use Object.{keys,values,entries}, and iterate over the resulting array."
      },
      {
        "selector": "LabeledStatement",
        "message": "Labels are a form of GOTO; using them makes code confusing and hard to maintain and understand."
      },
      {
        "selector": "WithStatement",
        "message": "`with` is disallowed in strict mode because it makes code impossible to predict and optimize."
      }
    ],
    "no-script-url": "warn",
    "no-undef": "warn",
    "no-unused-vars": "off",
    "no-useless-escape": "warn",
    "prefer-destructuring": "warn",
    "@typescript-eslint/ban-ts-ignore": "warn",
    "@typescript-eslint/camelcase": "off",
    "@typescript-eslint/interface-name-prefix": "off",
    "@typescript-eslint/no-non-null-assertion": "off",
    "@typescript-eslint/no-unused-vars": [
      "warn",
      {
        "argsIgnorePattern": "^_",
        "varsIgnorePattern": "^_"
      }
    ],
    "@typescript-eslint/no-use-before-define": "off"
  }
}
